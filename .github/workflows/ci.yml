name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    # We're running on ubuntu-latest, nothing special
    runs-on: ubuntu-latest
    steps:
      # As usual, we simply checkout the project
      - name: Checkout
        uses: actions/checkout@v2

      # This action is provided by Cypress.
      # It installs node and the NPM dependencies, and
      # caches them.
      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # NOTE: we don't actually run tests here!
          runTests: false

      # Now we run our lints. This is the place where you could
      # run other tests unrelated to cypress (e.g.: unit tests).
      - name: Run lints
        run: npm run lint

      # Now we're building the svelte site.
      # This step generates a build/ directory.
      - name: Build site
        run: npm run build

      # And lastly, we upload the static folders as artifacts
      # so we can use them in later steps.
      - name: Upload build and .svelte-kit folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # We need to use the cypress container here, that includes
    # node, chrome and firefox.
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: build
    strategy:
      # When one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # Run copies of the current job in parallel.
        # Cypress will decide in which container to run tests
        # so they can run in parallel. Read more about this here:
        # https://docs.cypress.io/guides/guides/parallelization
        #
        # If you don't want to use Cypress Dashboard, remove the matrix.
        #containers: [1, 2]
        containers: [1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build
      - run: ls -la
      - run: ls -la build
      - run: python3 -m http.server --directory build 3000 &
      - run: sleep 5
      - run: curl http://localhost:3000/index.html
      - run: curl http://localhost:3000/
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          wait-on: http://localhost:3000/
          wait-on-timeout: 10
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    needs: [test]

    # Only run if actually merged to main
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Deploy
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./build
          cname: www.dropzone.dev
